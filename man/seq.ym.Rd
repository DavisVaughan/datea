% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ym-seq.R
\name{seq.ym}
\alias{seq.ym}
\title{Sequence generation}
\usage{
\method{seq}{ym}(from, to, by, length.out, along.with, ...)
}
\arguments{
\item{from}{\verb{[ym]}

A ym.}

\item{to}{\verb{[ym]}

Optional. A ym.}

\item{by}{\verb{[integer(1)]}

Optional. A single integer representing the step size. Must be negative
if \code{to} is supplied and the sequence between \code{from} and \code{to} is decreasing.}

\item{length.out}{\verb{[integer(1)]}

Optional. A single integer representing the final output size. If \code{to} is
supplied, this must divide the distance between \code{from} and \code{to} into
equally spaced pieces, otherwise an error is thrown.}

\item{along.with}{\verb{[vector]}

Optional. A vector to take the length of. The length of the vector is used
as the \code{length.out} value.}

\item{...}{Not used.}
}
\description{
This \code{\link[=seq]{seq()}} method generates regular sequences of ym objects. It functions
the same as the default \code{seq()} method, except that fractional sequences
that might be generated by \code{seq(to =, length.out =)} are not allowed.

\code{seq()} methods require a \code{from} argument, and any combination of two of the
other arguments. The only combination not allowed is \code{length.out} and
\code{along.with}, because they represent the same information.
}
\examples{
x <- ym(1970, 1)

seq(x, by = 3, length.out = 10)

seq(x, to = ym(1980, 1), by = 6)

seq(x, to = ym(1980, 1), length.out = 5)

# 4 values between 1970-01 and 1970-04, there
# is no way to divide these evenly into 3 equally spaced pieces!
try(seq(x, to = ym(1970, 4), length.out = 3))
}
